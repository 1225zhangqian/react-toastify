{
  "name": "React Toastify",
  "tagline": "Notify your user with ease !",
  "body": "# React Toastify [![npm](https://img.shields.io/npm/dt/react-toastify.svg)]() [![npm](https://img.shields.io/npm/v/react-toastify.svg)]() [![license](https://img.shields.io/github/license/sniphpet/react-toastify.svg?maxAge=2592000)]()\r\n   \r\nReact-Toastify allow you to add toast notification to your app with ease.\r\n   \r\n## Installation \r\n   \r\n```\r\n$ npm install --save react-toastify\r\n```\r\n   \r\nIf you use a style loader you can import the stylesheet as follow :\r\n   \r\n```javascript\r\nimport 'react-toastify/dist/ReactToastify.min.css' \r\n```\r\n\r\n## Features\r\n\r\n- Can be positioned\r\n- Define behavior per toast\r\n- Super easy to style\r\n- Can display a react component inside the toast !\r\n\r\n## How it works ?\r\n   \r\nThe component use a dead simple pubsub to listen and trigger event. The pubsub allow us to display a toast from everywhere in your app.\r\n   \r\n- Add a ToastContainer to your app\r\n   \r\n```javascript\r\nimport React from 'react';\r\nimport { render } from ReactDOM;\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css'; \r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n        {/*Your others component*/}\r\n      <ToastContainer autoClose={3000} position=\"top-center\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n```\r\n\r\n- Display a Toast from everywhere !\r\n   \r\n```javascript\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify';\r\n    \r\nfunction handleClick() {\r\n    toast('Hello', {\r\n      type: toast.TYPE.INFO\r\n    });\r\n}\r\n    \r\nconst ToastBtn = () => {\r\n    return(\r\n        <button onClick={handleClick}>My Awesome Button</button>\r\n    )\r\n}\r\n```\r\n  \r\n## Api\r\n  \r\n### ToastContainer (Type : React Component)\r\n   \r\n|Props|Type|Default|Description|\r\n|-----|----|-------|-----------|\r\n|position|string|top-right|Define where the toast appear|\r\n|autoClose|false\\|int|5000|Delay in ms to close the toast. If set to false, the notification need to be closed manualy|\r\n|className|string|-|Add classes to the container|\r\n|style|object|-|Add inline style to the container|\r\n      \r\nposition accept the following value : \r\n      \r\n```javascript\r\ntop-right, top-center, top-left, bottom-right, bottom-center, bottom-left\r\n```\r\n      \r\nYou can use the toast object to avoid any typo :\r\n\r\n```javascript\r\nimport { toast } from 'react-toastify';\r\n      \r\ntoast.POSITION.TOP_LEFT, toast.POSITION.TOP_RIGHT, toast.POSITION.TOP_CENTER\r\ntoast.POSITION.BOTTOM_LEFT,toast.POSITION.BOTTOM_RIGHT, toast.POSITION.BOTTOM_CENTER\r\n```  \r\n   \r\n### toast (Type: Object)\r\n   \r\nAll the function inside toast can take 2 parameters :\r\n   \r\n|Parameter|Type|Required|Description|\r\n|---------|----|--------|-----|\r\n|content|string\\|React Element|✓|Element that will be displayed|\r\n|options|object|✘|Possible keys : autoClose, type, props\r\n   \r\nIf you pass an autoClose parameter it will overwrite the autoClose behavior defined in the container.\r\n\r\n```javascript\r\nconst Img = (props) => <div><img width={48} src={props.foo} /></div>;\r\nconst options = {\r\n    autoClose: false, //The user need to close the toast to remove it\r\n    props: { // props will be passed to the component displayed by the notification \r\n           foo: 'bar'\r\n    },\r\n    type: toast.TYPE.INFO\r\n};\r\n   \r\ntoast(<Img />, options) // default, type: 'default'\r\ntoast.success(\"Hello\", options) // add type: 'success' to options\r\ntoast.info(\"World\", options) // add type: 'info' to options\r\ntoast.warning(<Img />, options) // add type: 'warning' to options\r\ntoast.error(<Img />, options) // add type: 'error' to options\r\ntoast.dismiss() // Remove all toasts !\r\n```\r\n\r\n## Contribute\r\n\r\nAny suggestions and pull request are welcome !\r\n   \r\n## License\r\n   \r\nLicensed under MIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}